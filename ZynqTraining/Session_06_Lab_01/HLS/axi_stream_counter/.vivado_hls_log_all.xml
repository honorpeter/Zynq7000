<?xml version="1.0" encoding="UTF-8"?>
<vivadoHLSLog:LogRoot xmlns:vivadoHLSLog="www.xilinx.com/vivadoHLSLog">
  <errorLogs>
    <logs>
      <synLog/>
      <simLog/>
      <mgLog/>
      <packageLog/>
      <csimLog/>
    </logs>
  </errorLogs>
  <warningLogs>
    <logs>
      <synLog>
        <logs message="WARNING: [RTGEN 206-101] Register 'counterValue' is power-on initialization." projectName="axi_stream_counter" solutionName="solution1" date="2019-01-21T17:23:36.894-0500" type="Warning"/>
      </synLog>
      <simLog>
        <logs message="WARNING: [Simtcl 6-197] One or more HDL objects could not be logged because of object type or size limitations.  To see details please rerun the command with -verbose (-v).&#xD;&#xA;## set designtopgroup [add_wave_group &quot;Design Top Signals&quot;]&#xD;&#xA;## set coutputgroup [add_wave_group &quot;C Outputs&quot; -into $designtopgroup]&#xD;&#xA;## set return_group [add_wave_group return(wire) -into $coutputgroup]&#xD;&#xA;## add_wave /apatb_axi_stream_counter_top/AESL_inst_axi_stream_counter/ap_return -into $return_group -radix hex&#xD;&#xA;## set counter_output_group [add_wave_group counter_output(axis) -into $coutputgroup]&#xD;&#xA;## add_wave /apatb_axi_stream_counter_top/AESL_inst_axi_stream_counter/counter_output_TREADY -into $counter_output_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_axi_stream_counter_top/AESL_inst_axi_stream_counter/counter_output_TVALID -into $counter_output_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_axi_stream_counter_top/AESL_inst_axi_stream_counter/counter_output_TDATA -into $counter_output_group -radix hex&#xD;&#xA;## set blocksiggroup [add_wave_group &quot;Block-level IO Handshake&quot; -into $designtopgroup]&#xD;&#xA;## add_wave /apatb_axi_stream_counter_top/AESL_inst_axi_stream_counter/ap_start -into $blocksiggroup&#xD;&#xA;## add_wave /apatb_axi_stream_counter_top/AESL_inst_axi_stream_counter/ap_done -into $blocksiggroup&#xD;&#xA;## add_wave /apatb_axi_stream_counter_top/AESL_inst_axi_stream_counter/ap_idle -into $blocksiggroup&#xD;&#xA;## add_wave /apatb_axi_stream_counter_top/AESL_inst_axi_stream_counter/ap_ready -into $blocksiggroup&#xD;&#xA;## set resetgroup [add_wave_group &quot;Reset&quot; -into $designtopgroup]&#xD;&#xA;## add_wave /apatb_axi_stream_counter_top/AESL_inst_axi_stream_counter/ap_rst_n -into $resetgroup&#xD;&#xA;## set clockgroup [add_wave_group &quot;Clock&quot; -into $designtopgroup]&#xD;&#xA;## add_wave /apatb_axi_stream_counter_top/AESL_inst_axi_stream_counter/ap_clk -into $clockgroup&#xD;&#xA;## set testbenchgroup [add_wave_group &quot;Test Bench Signals&quot;]&#xD;&#xA;## set tbinternalsiggroup [add_wave_group &quot;Internal Signals&quot; -into $testbenchgroup]&#xD;&#xA;## set tb_simstatus_group [add_wave_group &quot;Simulation Status&quot; -into $tbinternalsiggroup]&#xD;&#xA;## set tb_portdepth_group [add_wave_group &quot;Port Depth&quot; -into $tbinternalsiggroup]&#xD;&#xA;## add_wave /apatb_axi_stream_counter_top/AUTOTB_TRANSACTION_NUM -into $tb_simstatus_group -radix hex&#xD;&#xA;## add_wave /apatb_axi_stream_counter_top/ready_cnt -into $tb_simstatus_group -radix hex&#xD;&#xA;## add_wave /apatb_axi_stream_counter_top/done_cnt -into $tb_simstatus_group -radix hex&#xD;&#xA;## add_wave /apatb_axi_stream_counter_top/LENGTH_counter_output -into $tb_portdepth_group -radix hex&#xD;&#xA;## add_wave /apatb_axi_stream_counter_top/LENGTH_ap_return -into $tb_portdepth_group -radix hex&#xD;&#xA;## set tbcoutputgroup [add_wave_group &quot;C Outputs&quot; -into $testbenchgroup]&#xD;&#xA;## set tb_return_group [add_wave_group return(wire) -into $tbcoutputgroup]&#xD;&#xA;## add_wave /apatb_axi_stream_counter_top/ap_return -into $tb_return_group -radix hex&#xD;&#xA;## set tb_counter_output_group [add_wave_group counter_output(axis) -into $tbcoutputgroup]&#xD;&#xA;## add_wave /apatb_axi_stream_counter_top/counter_output_TREADY -into $tb_counter_output_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_axi_stream_counter_top/counter_output_TVALID -into $tb_counter_output_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_axi_stream_counter_top/counter_output_TDATA -into $tb_counter_output_group -radix hex&#xD;&#xA;## save_wave_config axi_stream_counter.wcfg&#xD;&#xA;## run all&#xD;&#xA;Note: simulation done!&#xD;&#xA;Time: 3175 ns  Iteration: 1  Process: /apatb_axi_stream_counter_top/generate_sim_done_proc  File: D:/Github/Zynq7000/ZynqTraining/Session_06_Lab_01/HLS/axi_stream_counter/solution1/sim/vhdl/axi_stream_counter.autotb.vhd&#xD;&#xA;Failure: NORMAL EXIT (note: failure is to force the simulator to stop)&#xD;&#xA;Time: 3175 ns  Iteration: 1  Process: /apatb_axi_stream_counter_top/generate_sim_done_proc  File: D:/Github/Zynq7000/ZynqTraining/Session_06_Lab_01/HLS/axi_stream_counter/solution1/sim/vhdl/axi_stream_counter.autotb.vhd&#xD;&#xA;$finish called at time : 3175 ns&#xD;&#xA;## quit" projectName="axi_stream_counter" solutionName="solution1" date="2019-01-21T17:24:15.728-0500" type="Warning"/>
        <logs message="WARNING: [COSIM 212-75] Fifo port 'counter_output' has a default depth of 1. Insufficient depth may cause simulation mismatch or freeze. Please specify the depth in 'set_directive_interface' using the option '-depth'.&#xD;&#xA;   Build using &quot;C:/xilinx/Vivado/2018.3/msys64/mingw64/bin/g++&quot;&#xD;&#xA;   Compiling axi_stream_counter.cpp_pre.cpp.tb.cpp&#xD;&#xA;   Compiling axi_stream_counter_testbench.cpp_pre.cpp.tb.cpp&#xD;&#xA;   Compiling apatb_axi_stream_counter.cpp&#xD;&#xA;   Generating cosim.tv.exe" projectName="axi_stream_counter" solutionName="solution1" date="2019-01-21T17:23:59.132-0500" type="Warning"/>
      </simLog>
      <mgLog/>
      <packageLog/>
      <csimLog/>
    </logs>
  </warningLogs>
</vivadoHLSLog:LogRoot>
